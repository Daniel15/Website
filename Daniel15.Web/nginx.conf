# Redirects from other domains
server {
	server_name dan.cx
	            d15.biz daniel.lonigro.id.au daniel.lonigro.name daniel15.net
	            daniiiiiel.com iamdan.id.au daniel.lonig.ro danlo.me dan.ax
	            dan.do dl.mk dan.net.au 

				www.dan.cx www.d.sb
	            www.d15.biz www.daniel.lonigro.id.au www.daniel.lonigro.name www.daniel15.net
	            www.daniiiiiel.com www.iamdan.id.au www.daniel.lonig.ro www.danlo.me
	            www.dan.ax www.dan.do www.dl.mk www.dan.net.au;
	listen 80;
	listen 443 ssl http2;
	ssl_certificate /etc/letsencrypt/live/dan.cx/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/dan.cx/privkey.pem;

	location / {
		return 301 https://d.sb$request_uri;
	}
}

# Redirect from non-HTTPS d.sb to HTTPS
server {
	server_name d.sb;
	listen 80;
	location ~ /.well-known/(webfinger|nodeinfo) {
		return 301 https://toot.d.sb$request_uri;
	}
	location /@dan {
		return 301 https://toot.d.sb$request_uri;
	}
	location / {
		return 301 https://d.sb$request_uri;
	}
}

# Handles only caching certain URLs
map $uri $dan_no_cache {
	default 1;
	~^/cassette.axd/ 0;
	/ 0;
	/blog 0;
	~^/sig/ 0;
}

map $http_cookie $dan_logged_in {
	default 0;
	# Never cache responses if they have auth cookies in them
	~ASPXAUTH 1;
	~.MONOAUTH 1;
	~.AspNet.Session 1;
}

server {
	server_name d.sb;
	listen 443 ssl http2;
	root /var/www/dan.cx/public/;

	ssl_certificate /etc/letsencrypt/live/dan.cx/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/dan.cx/privkey.pem;

	# Redirect pages from old WordPress blog
	rewrite ^/blog/page/([0-9]+)/$ /blog/page-$1 permanent;
	# Redirect old URLs with days as well as month and year
	rewrite "^/blog/(\d{4})/(\d{2})/(\d{2})/(.+)/$" /blog/$1/$2/$4 permanent;
	# Redirect old trackback URLs
	rewrite "^/blog/(\d{4})/(\d{2})/(.+)/trackback/$" /blog/$1/$2/$3 permanent;
	# Rewrite old WordPress images
	rewrite ^/blog/wp-content/uploads/(.+)$ /oldblog/wp-content/uploads/$1 last;
	# Old Social feed URLs
	rewrite ^/feed.htm$ socialfeed.htm permanent;

	rewrite ^/stuff/(.*) https://stuff.dan.cx/$1 permanent;

	location ~ /.well-known/(webfinger|nodeinfo) {
		return 301 https://toot.d.sb$request_uri;
	}
	location /@dan {
		return 301 https://toot.d.sb$request_uri;
	}

	# Plausible logging
	location = /api/event {
		proxy_pass http://hits.vpn.d.sb:8000/api/event;
		proxy_buffering on;
		proxy_http_version 1.1;

		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-Host $host;
	}
	
	location / {
		# Pass requests for unknown files to ASP.NET
		try_files $uri $uri/index.htm @aspnet;
	}

	# Handle requests for files that could be screenshots.
	# Try ss.dan.cx files before passing to ASP.NET
	location ~ "^/\d{4}/\d{2}/.+\.(png|jpg|jpeg|gif|mp4)$" {
		alias /var/www/;
		try_files dan.cx/public/$uri ss.dan.cx/$uri @aspnet;
	}

	# Handle .php files
	location ~ \.php$ {
		include fastcgi_params;
		fastcgi_pass php7;
	}

	# Far future expires for combined/minified assets
	location /cache/ {
		expires max;
	}

	location @aspnet {
		proxy_pass http://unix:/run/user/33/dan-live.sock;
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Real-IP $remote_addr;

		# Caching parameters
		# Note that having $request_method here breaks ngx_cache_purge - https://github.com/FRiCKLE/ngx_cache_purge/issues/8
		# However, without it, HEAD requests from Pingdom kill the cache.
		proxy_cache_key "$request_method$scheme$host$request_uri";
		proxy_cache DANIEL15;
		proxy_cache_valid 60m;

		# Scenarios where we don't want to cache
		proxy_cache_bypass $dan_no_cache $dan_logged_in;
		proxy_no_cache $dan_no_cache $dan_logged_in;
		# Add cache status as X-Cache header
		add_header X-Cache $upstream_cache_status;
	}

	error_page 404 /Error/Status404;
	# Override PHP 404 page
	fastcgi_intercept_errors on;
}

# Redirect old Feedburner URLs
server {
	server_name feeds.d15.biz feeds.dan.cx;
	listen 80;
	listen 443 ssl http2;
	ssl_certificate /etc/letsencrypt/live/dan.cx/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/dan.cx/privkey.pem;
	
	location / {
		return 302 https://d.sb/;
	}
	
	location /daniel15 {
		return 301 https://d.sb/blog/feed;
	}
}