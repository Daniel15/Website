@using System.Threading.Tasks
@using Daniel15.Web.Services.CodeRepositories
@model Daniel15.Web.ViewModels.Project.ProjectViewModel

<li class="@(string.Join(" ", Model.Project.Technologies.Select(tech => "uses-" + tech)))">
	@if (!string.IsNullOrEmpty(Model.Project.Thumbnail))
	{
		<a asp-controller="Project" asp-action="Detail" asp-route-slug="@Model.Project.Slug" class="thumb">
			<img class="thumb" src="@Url.Image("screenshots/" + Model.Project.Thumbnail + ".png")" alt="Thumbnail for @Model.Project.Name" height="@(Model.Project.ThumbnailHeight ?? 160)" width="@(Model.Project.ThumbnailWidth ?? 200)" />
		</a>
	}
	<h3>
		<a asp-controller="Project" asp-action="Detail" asp-route-slug="@Model.Project.Slug">
			@Model.Project.Name
		</a>
	</h3>
	@Html.Raw(Model.Project.Description)<br />

	@if (Model.Project.Created != null && Model.Project.Updated != null)
	{
		<br />
		<strong>Date: </strong> <text>Started </text> <time datetime="@Model.Project.Created.Value.ToString("s")">@Model.Project.Created.Value.ToStringWithOrdinal("d{0} MMMM yyyy")</time><text>, last updated </text><time datetime="@Model.Project.Updated.Value.ToString("s")">@Model.Project.Updated.Value.ToStringWithOrdinal("d{0} MMMM yyyy")</time>
	}
	else if (!string.IsNullOrEmpty(Model.Project.Date))
	{
		<br /><strong>Date: </strong> @Model.Project.Date
	}
	@if (!string.IsNullOrEmpty(Model.Project.Url))
	{
		<br /><strong>Website: </strong> <a href="@Model.Project.Url">@Model.Project.Url</a>
	}
	@if (Model.Project.Technologies != null && Model.Project.Technologies.Count > 0)
	{
		var primaryTechs = Model.Technologies.Where(x => x.IsPrimary);
		var secondaryTechs = Model.Technologies.Where(x => !x.IsPrimary);

		<br />
		<span class="techs">
			<strong>Technologies used:</strong>
			@foreach (var tech in primaryTechs)
			{
				<a href="@tech.Url" title="@tech.Name" class="@tech.Slug">@tech.Name</a>
			}
		</span>

		if (secondaryTechs.Any())
		{
			@:+
			foreach (var tech in secondaryTechs)
			{
				if (string.IsNullOrEmpty(tech.Url))
				{
					@:@tech.Name,
				}
				else
				{
					@:<a href="@tech.Url">@tech.Name</a>,
				}
			}
		}
	}

	@if (!string.IsNullOrWhiteSpace(Model.Project.RepositoryUrl))
	{
		<br/>
		@* TODO: Move this logic to controller or ViewModel.Project *@
		var repositoryUrl = new Uri(Model.Project.RepositoryUrl);
		if (GithubCodeRepository.IsGithubRepository(repositoryUrl))
		{
			var githubWebUrl = "https://github.com" + repositoryUrl.AbsolutePath.Replace(".git", string.Empty);
			<text>Code available on <a href="@githubWebUrl">GitHub</a></text>
			if (Model.Project.Forks != null || Model.Project.Watchers != null || Model.Project.OpenIssues != null)
			{
				<text>(@(Model.Project.Forks ?? 0) <a href="@githubWebUrl/network">forks</a>, @(Model.Project.Watchers ?? 0) <a href="@githubWebUrl/stargazers">watchers</a>, @(Model.Project.OpenIssues ?? 0) <a href="@githubWebUrl/issues">open issues</a>)</text>
			}
		}
		else
		{
			<strong>Code available at: </strong> <a href="@Model.Project.RepositoryUrl">@Model.Project.RepositoryUrl</a>
			if (Model.Project.Forks != null || Model.Project.Watchers != null || Model.Project.OpenIssues != null)
			{
				<text>(@(Model.Project.Forks ?? 0) forks, @(Model.Project.Watchers ?? 0) watchers, @(Model.Project.OpenIssues ?? 0) open issues)</text>
			}
		}
}
</li>
