// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static class MVC
{
    public static Daniel15.Web.Controllers.AccountController Account = new Daniel15.Web.Controllers.T4MVC_AccountController();
    public static Daniel15.Web.Controllers.BlogController Blog = new Daniel15.Web.Controllers.T4MVC_BlogController();
    public static Daniel15.Web.Controllers.BlogPartialsController BlogPartials = new Daniel15.Web.Controllers.T4MVC_BlogPartialsController();
    public static Daniel15.Web.Controllers.FeedController Feed = new Daniel15.Web.Controllers.T4MVC_FeedController();
    public static Daniel15.Web.Controllers.RedirectController Redirect = new Daniel15.Web.Controllers.T4MVC_RedirectController();
    public static Daniel15.Web.Controllers.SiteController Site = new Daniel15.Web.Controllers.T4MVC_SiteController();
    public static Daniel15.Web.Controllers.SocialController Social = new Daniel15.Web.Controllers.T4MVC_SocialController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class css {
            private const string URLPATH = "~/Content/css";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string blog_less = Url("blog.less");
            public static readonly string blogadmin_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/blogadmin.min.css") ? Url("blogadmin.min.css") : Url("blogadmin.css");
                 
            public static readonly string border_radius_htc = Url("border-radius.htc");
            public static readonly string csshover_htc = Url("csshover.htc");
            public static readonly string main_less = Url("main.less");
            public static readonly string mixins_less = Url("mixins.less");
            public static readonly string mobile_less = Url("mobile.less");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class pages {
                private const string URLPATH = "~/Content/css/pages";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string index_less = Url("index.less");
                public static readonly string projects_less = Url("projects.less");
                public static readonly string search_less = Url("search.less");
                public static readonly string socialfeed_less = Url("socialfeed.less");
            }
        
            public static readonly string print_less = Url("print.less");
            public static readonly string sprites_processed_less = Url("sprites-processed.less");
            public static readonly string sprites_less = Url("sprites.less");
            public static readonly string style_ie6_less = Url("style-ie6.less");
            public static readonly string style_ie7_less = Url("style-ie7.less");
            public static readonly string style_ie8_less = Url("style-ie8.less");
            public static readonly string style_less = Url("style.less");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class images {
            private const string URLPATH = "~/Content/images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string background_png = Url("background.png");
            public static readonly string cont_bg_png = Url("cont_bg.png");
            public static readonly string footer_fade_png = Url("footer_fade.png");
            public static readonly string gradient_glossy_sidebar_png = Url("gradient-glossy-sidebar.png");
            public static readonly string gradient_glossy_png = Url("gradient-glossy.png");
            public static readonly string gradient_glossy2_png = Url("gradient-glossy2.png");
            public static readonly string gradient_glossy3_png = Url("gradient-glossy3.png");
            public static readonly string header_bg_png = Url("header_bg.png");
            public static readonly string header_fade_png = Url("header_fade.png");
            public static readonly string header_fade_psd = Url("header_fade.psd");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class icons {
                private const string URLPATH = "~/Content/images/icons";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string calendar_view_day_png = Url("calendar_view_day.png");
                public static readonly string camera_png = Url("camera.png");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class chat {
                    private const string URLPATH = "~/Content/images/icons/chat";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string busy_gif = Url("busy.gif");
                    public static readonly string offline_gif = Url("offline.gif");
                    public static readonly string online_gif = Url("online.gif");
                }
            
                public static readonly string comments_png = Url("comments.png");
                public static readonly string folder_page_png = Url("folder_page.png");
                public static readonly string image_png = Url("image.png");
                public static readonly string link_png = Url("link.png");
                public static readonly string picture_png = Url("picture.png");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class social {
                    private const string URLPATH = "~/Content/images/icons/social";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string digg_png = Url("digg.png");
                    public static readonly string facebook_png = Url("facebook.png");
                    public static readonly string foursquare_png = Url("foursquare.png");
                    public static readonly string github_png = Url("github.png");
                    public static readonly string gplus_png = Url("gplus.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class large {
                        private const string URLPATH = "~/Content/images/icons/social/large";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string facebook_png = Url("facebook.png");
                        public static readonly string reddit_png = Url("reddit.png");
                        public static readonly string twitter_png = Url("twitter.png");
                    }
                
                    public static readonly string lastfm_png = Url("lastfm.png");
                    public static readonly string linkedin_png = Url("linkedin.png");
                    public static readonly string myspace_png = Url("myspace.png");
                    public static readonly string pinboard_gif = Url("pinboard.gif");
                    public static readonly string reddit_png = Url("reddit.png");
                    public static readonly string rss_png = Url("rss.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class share {
                        private const string URLPATH = "~/Content/images/icons/social/share";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string facebook_png = Url("facebook.png");
                        public static readonly string twitter_png = Url("twitter.png");
                    }
                
                    public static readonly string stackoverflow_png = Url("stackoverflow.png");
                    public static readonly string stumbleupon_png = Url("stumbleupon.png");
                    public static readonly string twitter_gif = Url("twitter.gif");
                    public static readonly string youtube_gif = Url("youtube.gif");
                }
            
                public static readonly string spinner_gif = Url("spinner.gif");
                public static readonly string tag_blue_png = Url("tag_blue.png");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class techs {
                    private const string URLPATH = "~/Content/images/icons/techs";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string cmsms_png = Url("cmsms.png");
                    public static readonly string codeigniter_png = Url("codeigniter.png");
                    public static readonly string cplusplus_png = Url("cplusplus.png");
                    public static readonly string cs_png = Url("cs.png");
                    public static readonly string csharp_png = Url("csharp.png");
                    public static readonly string css_png = Url("css.png");
                    public static readonly string database_png = Url("database.png");
                    public static readonly string html_png = Url("html.png");
                    public static readonly string js_png = Url("js.png");
                    public static readonly string kohana_png = Url("kohana.png");
                    public static readonly string mediawiki_png = Url("mediawiki.png");
                    public static readonly string mootools_png = Url("mootools.png");
                    public static readonly string mysql_png = Url("mysql.png");
                    public static readonly string nodejs_png = Url("nodejs.png");
                    public static readonly string php_png = Url("php.png");
                    public static readonly string smf_png = Url("smf.png");
                    public static readonly string sqlite_png = Url("sqlite.png");
                    public static readonly string vb_png = Url("vb.png");
                    public static readonly string vb6_png = Url("vb6.png");
                    public static readonly string wordpress_png = Url("wordpress.png");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class old {
                private const string URLPATH = "~/Content/images/old";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string facebook_png = Url("facebook.png");
                public static readonly string myspace_png = Url("myspace.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class screenshots {
                private const string URLPATH = "~/Content/images/screenshots";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bebo_png = Url("bebo.png");
                public static readonly string daniel15_png = Url("daniel15.png");
                public static readonly string daniel15net_old_png = Url("daniel15net-old.png");
                public static readonly string daniel15net_png = Url("daniel15net.png");
                public static readonly string dansoft_png = Url("dansoft.png");
                public static readonly string digg_png = Url("digg.png");
                public static readonly string dnstools_png = Url("dnstools.png");
                public static readonly string dynamic_png = Url("dynamic.png");
                public static readonly string entercalc_png = Url("entercalc.png");
                public static readonly string facebook_png = Url("facebook.png");
                public static readonly string friendster_png = Url("friendster.png");
                public static readonly string hi5_png = Url("hi5.png");
                public static readonly string lastfm_png = Url("lastfm.png");
                public static readonly string myspace_png = Url("myspace.png");
                public static readonly string no_pic_png = Url("no-pic.png");
                public static readonly string nodewhiteboard_png = Url("nodewhiteboard.png");
                public static readonly string pmacct_png = Url("pmacct.png");
                public static readonly string rtorrentweb_png = Url("rtorrentweb.png");
                public static readonly string Screenshot_png = Url("Screenshot.png");
                public static readonly string site_back_png = Url("site-back.png");
                public static readonly string smfmods_png = Url("smfmods.png");
                public static readonly string syte_png = Url("syte.png");
                public static readonly string tagworld_png = Url("tagworld.png");
                public static readonly string twitter_png = Url("twitter.png");
                public static readonly string xanga_png = Url("xanga.png");
                public static readonly string zurl_old_png = Url("zurl-old.png");
                public static readonly string zurl_png = Url("zurl.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class sprites {
                private const string URLPATH = "~/Content/images/sprites";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string mainsprite_b073f8354e2f4f7956038f163cddcf91_png = Url("mainsprite-b073f8354e2f4f7956038f163cddcf91.png");
                public static readonly string projects_dfe64b2ff374d4901494bd9a962d5abb_png = Url("projects-dfe64b2ff374d4901494bd9a962d5abb.png");
            }
        
            public static readonly string stripy_png = Url("stripy.png");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class js {
            private const string URLPATH = "~/Content/js";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string blog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/blog.min.js") ? Url("blog.min.js") : Url("blog.js");
                          
            public static readonly string blogadmin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/blogadmin.min.js") ? Url("blogadmin.min.js") : Url("blogadmin.js");
                          
            public static readonly string core_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/core.min.js") ? Url("core.min.js") : Url("core.js");
                          
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class framework {
                private const string URLPATH = "~/Content/js/framework";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class _git {
                    private const string URLPATH = "~/Content/js/framework/.git";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class branches {
                        private const string URLPATH = "~/Content/js/framework/.git/branches";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    }
                
                    public static readonly string config = Url("config");
                    public static readonly string description = Url("description");
                    public static readonly string FETCH_HEAD = Url("FETCH_HEAD");
                    public static readonly string HEAD = Url("HEAD");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class hooks {
                        private const string URLPATH = "~/Content/js/framework/.git/hooks";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string applypatch_msg_sample = Url("applypatch-msg.sample");
                        public static readonly string commit_msg_sample = Url("commit-msg.sample");
                        public static readonly string post_commit_sample = Url("post-commit.sample");
                        public static readonly string post_receive_sample = Url("post-receive.sample");
                        public static readonly string post_update_sample = Url("post-update.sample");
                        public static readonly string pre_applypatch_sample = Url("pre-applypatch.sample");
                        public static readonly string pre_commit_sample = Url("pre-commit.sample");
                        public static readonly string pre_rebase_sample = Url("pre-rebase.sample");
                        public static readonly string prepare_commit_msg_sample = Url("prepare-commit-msg.sample");
                        public static readonly string update_sample = Url("update.sample");
                    }
                
                    public static readonly string index = Url("index");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class info {
                        private const string URLPATH = "~/Content/js/framework/.git/info";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string exclude = Url("exclude");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class logs {
                        private const string URLPATH = "~/Content/js/framework/.git/logs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string HEAD = Url("HEAD");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class refs {
                            private const string URLPATH = "~/Content/js/framework/.git/logs/refs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class heads {
                                private const string URLPATH = "~/Content/js/framework/.git/logs/refs/heads";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string master = Url("master");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class remotes {
                                private const string URLPATH = "~/Content/js/framework/.git/logs/refs/remotes";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class origin {
                                    private const string URLPATH = "~/Content/js/framework/.git/logs/refs/remotes/origin";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string master = Url("master");
                                }
                            
                            }
                        
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class objects {
                        private const string URLPATH = "~/Content/js/framework/.git/objects";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class _13 {
                            private const string URLPATH = "~/Content/js/framework/.git/objects/13";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string a8ca8855c7da8508d34f04ec34dd6f7aa334f3 = Url("a8ca8855c7da8508d34f04ec34dd6f7aa334f3");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class _19 {
                            private const string URLPATH = "~/Content/js/framework/.git/objects/19";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string d6d333b970292f2c239a493f221f69342dfe24 = Url("d6d333b970292f2c239a493f221f69342dfe24");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class _45 {
                            private const string URLPATH = "~/Content/js/framework/.git/objects/45";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string _074d723445453441d91f1148956e4afce59674 = Url("074d723445453441d91f1148956e4afce59674");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class _53 {
                            private const string URLPATH = "~/Content/js/framework/.git/objects/53";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string _0005dabdfca803684e9ce0c1e259769087ff4a = Url("0005dabdfca803684e9ce0c1e259769087ff4a");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class _63 {
                            private const string URLPATH = "~/Content/js/framework/.git/objects/63";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string feaf7e71b5811af669ebe6a18a8b2329c99b7c = Url("feaf7e71b5811af669ebe6a18a8b2329c99b7c");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class c9 {
                            private const string URLPATH = "~/Content/js/framework/.git/objects/c9";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string b9287427b04c688fcff6b93e52be81ac970ef2 = Url("b9287427b04c688fcff6b93e52be81ac970ef2");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class e1 {
                            private const string URLPATH = "~/Content/js/framework/.git/objects/e1";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string _70fbbc55378c3ac800bcd38d5608010949a277 = Url("70fbbc55378c3ac800bcd38d5608010949a277");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class ef {
                            private const string URLPATH = "~/Content/js/framework/.git/objects/ef";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string _9fad0ce3ca067f95cb6bafc774d964a77f6e3c = Url("9fad0ce3ca067f95cb6bafc774d964a77f6e3c");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class f7 {
                            private const string URLPATH = "~/Content/js/framework/.git/objects/f7";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string _930c1cfedff335a6f0288eb93cffbcce9d76f1 = Url("930c1cfedff335a6f0288eb93cffbcce9d76f1");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class info {
                            private const string URLPATH = "~/Content/js/framework/.git/objects/info";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class pack {
                            private const string URLPATH = "~/Content/js/framework/.git/objects/pack";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string pack_5793e1c205d36194d90cf89406091b656913ef16_idx = Url("pack-5793e1c205d36194d90cf89406091b656913ef16.idx");
                            public static readonly string pack_5793e1c205d36194d90cf89406091b656913ef16_pack = Url("pack-5793e1c205d36194d90cf89406091b656913ef16.pack");
                        }
                    
                    }
                
                    public static readonly string ORIG_HEAD = Url("ORIG_HEAD");
                    public static readonly string packed_refs = Url("packed-refs");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class refs {
                        private const string URLPATH = "~/Content/js/framework/.git/refs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class heads {
                            private const string URLPATH = "~/Content/js/framework/.git/refs/heads";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string master = Url("master");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class remotes {
                            private const string URLPATH = "~/Content/js/framework/.git/refs/remotes";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class origin {
                                private const string URLPATH = "~/Content/js/framework/.git/refs/remotes/origin";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string HEAD = Url("HEAD");
                                public static readonly string master = Url("master");
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class tags {
                            private const string URLPATH = "~/Content/js/framework/.git/refs/tags";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        }
                    
                    }
                
                }
            
                public static readonly string ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ajax.min.js") ? Url("ajax.min.js") : Url("ajax.js");
                              
                public static readonly string class_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/class.min.js") ? Url("class.min.js") : Url("class.js");
                              
                public static readonly string core_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/core.min.js") ? Url("core.min.js") : Url("core.js");
                              
                public static readonly string dom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dom.min.js") ? Url("dom.min.js") : Url("dom.js");
                              
                public static readonly string events_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/events.min.js") ? Url("events.min.js") : Url("events.js");
                              
                public static readonly string README_md = Url("README.md");
                public static readonly string storage_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/storage.min.js") ? Url("storage.min.js") : Url("storage.js");
                              
                public static readonly string templating_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/templating.min.js") ? Url("templating.min.js") : Url("templating.js");
                              
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tests {
                    private const string URLPATH = "~/Content/js/framework/tests";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string class_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/class.min.js") ? Url("class.min.js") : Url("class.js");
                                  
                    public static readonly string core_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/core.min.js") ? Url("core.min.js") : Url("core.js");
                                  
                    public static readonly string dom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dom.min.js") ? Url("dom.min.js") : Url("dom.js");
                                  
                    public static readonly string events_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/events.min.js") ? Url("events.min.js") : Url("events.js");
                                  
                    public static readonly string index_htm = Url("index.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jasmine {
                        private const string URLPATH = "~/Content/js/framework/tests/jasmine";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jasmine_html_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jasmine-html.min.js") ? Url("jasmine-html.min.js") : Url("jasmine-html.js");
                                      
                        public static readonly string jasmine_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jasmine.min.css") ? Url("jasmine.min.css") : Url("jasmine.css");
                             
                        public static readonly string jasmine_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jasmine.min.js") ? Url("jasmine.min.js") : Url("jasmine.js");
                                      
                        public static readonly string jasmine_favicon_png = Url("jasmine_favicon.png");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class misc {
                        private const string URLPATH = "~/Content/js/framework/tests/misc";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string events_htm = Url("events.htm");
                    }
                
                }
            
                public static readonly string yuidoc_json = Url("yuidoc.json");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class lib {
                private const string URLPATH = "~/Content/js/lib";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string html5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/html5.min.js") ? Url("html5.min.js") : Url("html5.js");
                              
                public static readonly string IE7_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/IE7.min.js") ? Url("IE7.min.js") : Url("IE7.js");
                              
                public static readonly string IE8_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/IE8.min.js") ? Url("IE8.min.js") : Url("IE8.js");
                              
                public static readonly string IE9_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/IE9.min.js") ? Url("IE9.min.js") : Url("IE9.js");
                              
                public static readonly string less_1_2_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/less-1.2.1.min.js") ? Url("less-1.2.1.min.js") : Url("less-1.2.1.js");
                              
                public static readonly string less_1_2_1_min_js = Url("less-1.2.1.min.js");
                public static readonly string LocalStorage_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/LocalStorage.min.js") ? Url("LocalStorage.min.js") : Url("LocalStorage.js");
                              
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class syntaxhighlighter {
                    private const string URLPATH = "~/Content/js/lib/syntaxhighlighter";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string shAutoloader_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shAutoloader.min.js") ? Url("shAutoloader.min.js") : Url("shAutoloader.js");
                                  
                    public static readonly string shBrushAppleScript_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushAppleScript.min.js") ? Url("shBrushAppleScript.min.js") : Url("shBrushAppleScript.js");
                                  
                    public static readonly string shBrushAS3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushAS3.min.js") ? Url("shBrushAS3.min.js") : Url("shBrushAS3.js");
                                  
                    public static readonly string shBrushBash_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushBash.min.js") ? Url("shBrushBash.min.js") : Url("shBrushBash.js");
                                  
                    public static readonly string shBrushColdFusion_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushColdFusion.min.js") ? Url("shBrushColdFusion.min.js") : Url("shBrushColdFusion.js");
                                  
                    public static readonly string shBrushCpp_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushCpp.min.js") ? Url("shBrushCpp.min.js") : Url("shBrushCpp.js");
                                  
                    public static readonly string shBrushCSharp_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushCSharp.min.js") ? Url("shBrushCSharp.min.js") : Url("shBrushCSharp.js");
                                  
                    public static readonly string shBrushCss_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushCss.min.js") ? Url("shBrushCss.min.js") : Url("shBrushCss.js");
                                  
                    public static readonly string shBrushDelphi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushDelphi.min.js") ? Url("shBrushDelphi.min.js") : Url("shBrushDelphi.js");
                                  
                    public static readonly string shBrushDiff_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushDiff.min.js") ? Url("shBrushDiff.min.js") : Url("shBrushDiff.js");
                                  
                    public static readonly string shBrushErlang_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushErlang.min.js") ? Url("shBrushErlang.min.js") : Url("shBrushErlang.js");
                                  
                    public static readonly string shBrushGroovy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushGroovy.min.js") ? Url("shBrushGroovy.min.js") : Url("shBrushGroovy.js");
                                  
                    public static readonly string shBrushJava_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushJava.min.js") ? Url("shBrushJava.min.js") : Url("shBrushJava.js");
                                  
                    public static readonly string shBrushJavaFX_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushJavaFX.min.js") ? Url("shBrushJavaFX.min.js") : Url("shBrushJavaFX.js");
                                  
                    public static readonly string shBrushJScript_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushJScript.min.js") ? Url("shBrushJScript.min.js") : Url("shBrushJScript.js");
                                  
                    public static readonly string shBrushPerl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushPerl.min.js") ? Url("shBrushPerl.min.js") : Url("shBrushPerl.js");
                                  
                    public static readonly string shBrushPhp_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushPhp.min.js") ? Url("shBrushPhp.min.js") : Url("shBrushPhp.js");
                                  
                    public static readonly string shBrushPlain_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushPlain.min.js") ? Url("shBrushPlain.min.js") : Url("shBrushPlain.js");
                                  
                    public static readonly string shBrushPowerShell_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushPowerShell.min.js") ? Url("shBrushPowerShell.min.js") : Url("shBrushPowerShell.js");
                                  
                    public static readonly string shBrushPython_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushPython.min.js") ? Url("shBrushPython.min.js") : Url("shBrushPython.js");
                                  
                    public static readonly string shBrushRuby_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushRuby.min.js") ? Url("shBrushRuby.min.js") : Url("shBrushRuby.js");
                                  
                    public static readonly string shBrushSass_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushSass.min.js") ? Url("shBrushSass.min.js") : Url("shBrushSass.js");
                                  
                    public static readonly string shBrushScala_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushScala.min.js") ? Url("shBrushScala.min.js") : Url("shBrushScala.js");
                                  
                    public static readonly string shBrushSql_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushSql.min.js") ? Url("shBrushSql.min.js") : Url("shBrushSql.js");
                                  
                    public static readonly string shBrushVb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushVb.min.js") ? Url("shBrushVb.min.js") : Url("shBrushVb.js");
                                  
                    public static readonly string shBrushXml_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushXml.min.js") ? Url("shBrushXml.min.js") : Url("shBrushXml.js");
                                  
                    public static readonly string shCore_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.js") ? Url("shCore.min.js") : Url("shCore.js");
                                  
                    public static readonly string shCore_less = Url("shCore.less");
                    public static readonly string shCoreDefault_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCoreDefault.min.css") ? Url("shCoreDefault.min.css") : Url("shCoreDefault.css");
                         
                    public static readonly string shCoreDjango_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCoreDjango.min.css") ? Url("shCoreDjango.min.css") : Url("shCoreDjango.css");
                         
                    public static readonly string shCoreEclipse_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCoreEclipse.min.css") ? Url("shCoreEclipse.min.css") : Url("shCoreEclipse.css");
                         
                    public static readonly string shCoreEmacs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCoreEmacs.min.css") ? Url("shCoreEmacs.min.css") : Url("shCoreEmacs.css");
                         
                    public static readonly string shCoreFadeToGrey_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCoreFadeToGrey.min.css") ? Url("shCoreFadeToGrey.min.css") : Url("shCoreFadeToGrey.css");
                         
                    public static readonly string shCoreMDUltra_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCoreMDUltra.min.css") ? Url("shCoreMDUltra.min.css") : Url("shCoreMDUltra.css");
                         
                    public static readonly string shCoreMidnight_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCoreMidnight.min.css") ? Url("shCoreMidnight.min.css") : Url("shCoreMidnight.css");
                         
                    public static readonly string shCoreRDark_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCoreRDark.min.css") ? Url("shCoreRDark.min.css") : Url("shCoreRDark.css");
                         
                    public static readonly string shLegacy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shLegacy.min.js") ? Url("shLegacy.min.js") : Url("shLegacy.js");
                                  
                    public static readonly string shThemeDefault_less = Url("shThemeDefault.less");
                    public static readonly string shThemeDjango_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeDjango.min.css") ? Url("shThemeDjango.min.css") : Url("shThemeDjango.css");
                         
                    public static readonly string shThemeEclipse_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeEclipse.min.css") ? Url("shThemeEclipse.min.css") : Url("shThemeEclipse.css");
                         
                    public static readonly string shThemeEmacs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeEmacs.min.css") ? Url("shThemeEmacs.min.css") : Url("shThemeEmacs.css");
                         
                    public static readonly string shThemeFadeToGrey_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeFadeToGrey.min.css") ? Url("shThemeFadeToGrey.min.css") : Url("shThemeFadeToGrey.css");
                         
                    public static readonly string shThemeMDUltra_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeMDUltra.min.css") ? Url("shThemeMDUltra.min.css") : Url("shThemeMDUltra.css");
                         
                    public static readonly string shThemeMidnight_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeMidnight.min.css") ? Url("shThemeMidnight.min.css") : Url("shThemeMidnight.css");
                         
                    public static readonly string shThemeRDark_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeRDark.min.css") ? Url("shThemeRDark.min.css") : Url("shThemeRDark.css");
                         
                }
            
            }
        
            public static readonly string site_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/site.min.js") ? Url("site.min.js") : Url("site.js");
                          
            public static readonly string socialfeed_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/socialfeed.min.js") ? Url("socialfeed.min.js") : Url("socialfeed.js");
                          
            public static readonly string syntaxhighlighter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/syntaxhighlighter.min.js") ? Url("syntaxhighlighter.min.js") : Url("syntaxhighlighter.js");
                          
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class not_an_easter_egg {
            private const string URLPATH = "~/Content/not_an_easter_egg";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class zero {
                private const string URLPATH = "~/Content/not_an_easter_egg/zero";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string color0_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/color0.min.css") ? Url("color0.min.css") : Url("color0.css");
                     
                public static readonly string color1_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/color1.min.css") ? Url("color1.min.css") : Url("color1.css");
                     
                public static readonly string graph0_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/graph0.min.css") ? Url("graph0.min.css") : Url("graph0.css");
                     
                public static readonly string graph1_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/graph1.min.css") ? Url("graph1.min.css") : Url("graph1.css");
                     
                public static readonly string theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/theme.min.css") ? Url("theme.min.css") : Url("theme.css");
                     
                public static readonly string zerbana_gif = Url("zerbana.gif");
                public static readonly string zerband_gif = Url("zerband.gif");
                public static readonly string zerbul1a_gif = Url("zerbul1a.gif");
                public static readonly string zerbul1d_gif = Url("zerbul1d.gif");
                public static readonly string zerbul2a_gif = Url("zerbul2a.gif");
                public static readonly string zerbul2d_gif = Url("zerbul2d.gif");
                public static readonly string zerbul3a_gif = Url("zerbul3a.gif");
                public static readonly string zerbul3d_gif = Url("zerbul3d.gif");
                public static readonly string zerglobd_gif = Url("zerglobd.gif");
                public static readonly string zerhoma_gif = Url("zerhoma.gif");
                public static readonly string zerhomd_gif = Url("zerhomd.gif");
                public static readonly string zerhomh_gif = Url("zerhomh.gif");
                public static readonly string zernavha_gif = Url("zernavha.gif");
                public static readonly string zernavhd_gif = Url("zernavhd.gif");
                public static readonly string zernavhe_gif = Url("zernavhe.gif");
                public static readonly string zernavhh_gif = Url("zernavhh.gif");
                public static readonly string zernavhs_gif = Url("zernavhs.gif");
                public static readonly string zernavva_gif = Url("zernavva.gif");
                public static readonly string zernavvd_gif = Url("zernavvd.gif");
                public static readonly string zernavve_gif = Url("zernavve.gif");
                public static readonly string zernavvh_gif = Url("zernavvh.gif");
                public static readonly string zernavvs_gif = Url("zernavvs.gif");
                public static readonly string zernxta_gif = Url("zernxta.gif");
                public static readonly string zernxtd_gif = Url("zernxtd.gif");
                public static readonly string zernxth_gif = Url("zernxth.gif");
                public static readonly string zero_inf = Url("zero.inf");
                public static readonly string zero_utf8 = Url("zero.utf8");
                public static readonly string zero1111_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zero1111.min.css") ? Url("zero1111.min.css") : Url("zero1111.css");
                     
                public static readonly string zerprea_gif = Url("zerprea.gif");
                public static readonly string zerpred_gif = Url("zerpred.gif");
                public static readonly string zerpreh_gif = Url("zerpreh.gif");
                public static readonly string zerrulea_gif = Url("zerrulea.gif");
                public static readonly string zerruled_gif = Url("zerruled.gif");
                public static readonly string zertxtr_gif = Url("zertxtr.gif");
                public static readonly string zerupa_gif = Url("zerupa.gif");
                public static readonly string zerupd_gif = Url("zerupd.gif");
                public static readonly string zeruph_gif = Url("zeruph.gif");
            }
        
            public static readonly string zero_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zero.min.css") ? Url("zero.min.css") : Url("zero.css");
                 
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class bundles
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class scripts {}
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class styles {}
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;


    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591


